{"id": 1, "title": "J2EE Misconfiguration: Missing Custom Error Page", "overview": "A Web application must define a default error page for 4xx errors (e.g. 404), 5xx (e.g. 500) errors and catch java.lang.Throwable exceptions to prevent attackers from mining information from the application container&amp;#x27;s built-in error response. When an attacker explores a web site looking for vulnerabilities, the amount of information that the site provides is crucial to the eventual success or failure of any attempted attacks.", "remediation": "::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Handle exceptions appropriately in source code.::PHASE:Implementation System Configuration:STRATEGY::EFFECTIVENESS::DESCRIPTION:Always define appropriate error pages. The application configuration should specify a default error page in order to guarantee that the application will never leak error messages to an attacker. Handling standard HTTP error codes is useful and user-friendly in addition to being a good security practice, and a good configuration will also define a last-chance error handler that catches any exception that could possibly be thrown by the application.::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Do not attempt to process an error or attempt to mask it.::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Verify return values are correct and do not supply sensitive information about the system.::", "damage": 1, "reproducability": 1, "exploitability": 1, "affected_users": 1, "discoverability": 1, "dread_total": 1, "effort": null, "type": "Imported", "poc": null, "approved": true, "risk": 1, "affected_hosts": null, "av": null, "ac": null, "au": null, "c": null, "i": null, "a": null, "e": null, "rl": null, "rc": null, "cdp": null, "td": null, "cr": null, "ir": null, "ar": null, "cvss_base": null, "cvss_impact": null, "cvss_exploitability": null, "cvss_temporal": null, "cvss_environmental": null, "cvss_modified_impact": null, "cvss_total": null, "ease": null}
