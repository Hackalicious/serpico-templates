{"id": 1, "title": "Uncontrolled File Descriptor Consumption", "overview": "When an attacker can influence the consumption of file descriptors, the attacker might be able to prevent the process from opening files for writing or reading. In some cases, file descriptor exhaustion could affect other processes. There are at least three distinct scenarios which can commonly lead to file descriptor exhaustion: Lack of throttling for the number of open file descriptors Losing all references to a file descriptor before reaching the shutdown stage Not closing file descriptors after processing", "remediation": "::PHASE:Implementation Architecture and Design:STRATEGY::EFFECTIVENESS::DESCRIPTION:If file I/O is being supported by an application for multiple users, balancing the resource allotment across the group may help to prevent exhaustion as well as differentiate malicious activity from an insufficient resource pool.::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Consider using the getrlimit() function included in the sys/resources library in order to determine how many files are currently allowed to be opened for the process.::", "damage": 1, "reproducability": 1, "exploitability": 1, "affected_users": 1, "discoverability": 1, "dread_total": 1, "effort": null, "type": "Imported", "poc": null, "approved": true, "risk": 1, "affected_hosts": null, "av": null, "ac": null, "au": null, "c": null, "i": null, "a": null, "e": null, "rl": null, "rc": null, "cdp": null, "td": null, "cr": null, "ir": null, "ar": null, "cvss_base": null, "cvss_impact": null, "cvss_exploitability": null, "cvss_temporal": null, "cvss_environmental": null, "cvss_modified_impact": null, "cvss_total": null, "ease": null}
