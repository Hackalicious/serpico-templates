{"id": 1, "title": "Use of a Non-reentrant Function in a Concurrent Context", "overview": "The software calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.", "remediation": "::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Use reentrant functions if available.::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:Add synchronization to your non-reentrant function.::PHASE:Implementation:STRATEGY::EFFECTIVENESS::DESCRIPTION:In Java, use the ReentrantLock Class.::", "damage": 1, "reproducability": 1, "exploitability": 1, "affected_users": 1, "discoverability": 1, "dread_total": 1, "effort": null, "type": "Imported", "poc": null, "approved": true, "risk": 1, "affected_hosts": null, "av": null, "ac": null, "au": null, "c": null, "i": null, "a": null, "e": null, "rl": null, "rc": null, "cdp": null, "td": null, "cr": null, "ir": null, "ar": null, "cvss_base": null, "cvss_impact": null, "cvss_exploitability": null, "cvss_temporal": null, "cvss_environmental": null, "cvss_modified_impact": null, "cvss_total": null, "ease": null}
