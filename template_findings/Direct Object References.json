[{"id": 3, "title": "Direct Object References", "damage": 8, "reproducability": 10, "exploitability": 8, "affected_users": 10, "discoverability": 8, "dread_total": 44, "effort": "LOW", "type": "Web Application", "overview": "<paragraph>The OWASP guide [1] gives the following description for Insecure Direct Object Reference:</paragraph><paragraph>Applications frequently use the actual name or key of an object when generating web pages. Applications do not always verify the user is authorized for the target object. This results in an insecure direct object reference flaw. Testers can easily manipulate parameter values to detect such flaws and code analysis quickly shows whether authorization is properly verified.</paragraph>", "poc": "<paragraph></paragraph>", "remediation": "<paragraph>Use per user or session indirect object references. This prevents attackers from directly targeting unauthorized resources. For example, instead of using the resource\u2019s database key, a drop down list of six resources authorized for the current user could use the numbers 1 to 6 to indicate which value the user selected. The application has to map the per-user indirect reference back to the actual database key on the server. </paragraph><paragraph>Check access. Each use of a direct object reference from an untrusted source must include an access control check to ensure the user is authorized for the requested object.</paragraph>", "references": "https://www.owasp.org/index.php/Top_10_2010-A4-Insecure_Direct_Object_References", "approved": true, "risk": 4, "affected_hosts": null, "av": null, "ac": null, "au": null, "c": null, "i": null, "a": null, "e": null, "rl": null, "rc": null, "cdp": null, "td": null, "cr": null, "ir": null, "ar": null, "cvss_base": null, "cvss_impact": null, "cvss_exploitability": null, "cvss_temporal": null, "cvss_environmental": null, "cvss_modified_impact": null, "cvss_total": null, "ease": null}]